version: '3.9'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - event-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - event-network
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./infrastructure/loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    user: "root"
    networks:
      - event-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./infrastructure/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./infrastructure/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./infrastructure/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - loki
    networks:
      - event-network

  # Grafana Alloy Agent for log collection
  # alloy:
  #   image: grafana/alloy:latest
  #   container_name: alloy
  #   volumes:
  #     - ./infrastructure/alloy/config.river:/etc/alloy/config.river
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./data/alloy:/tmp/alloy
  #   command: run /etc/alloy/config.river
  #   user: root
  #   depends_on:
  #     - loki
  #   networks:
  #     - event-network
  #   ports:
  #     - "12345:12345" # For internal metrics
  #   privileged: true # Add privileged mode for better Docker access

  # Application services
  gateway:
    build:
      context: .
      dockerfile: apps/gateway/docker/Dockerfile.dev
    container_name: gateway
    ports:
      - "3010:3000"
      - "3333:3333"
    environment:
      - NODE_ENV=development
      - GATEWAY_HOST=0.0.0.0
      - GATEWAY_PORT=3000
      - HTTP_PORT=3333
      - AUTH_SERVICE_HOST=auth
      - AUTH_SERVICE_PORT=3001
      - EVENT_SERVICE_HOST=event
      - EVENT_SERVICE_PORT=3002
    networks:
      - event-network
    volumes:
      - .:/app
    depends_on:
      - auth
      - event
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
        labels: "requestId,serviceId"

  auth:
    build:
      context: .
      dockerfile: apps/auth/docker/Dockerfile.dev
    container_name: auth
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo-user:27017
    networks:
      - event-network
    volumes:
      - .:/app
    depends_on:
      - mongo-user
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
        labels: "requestId,serviceId"

  event:
    build:
      context: .
      dockerfile: apps/event/docker/Dockerfile.dev
    container_name: event
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo-event:27017
    networks:
      - event-network
    volumes:
      - .:/app
    depends_on:
      - mongo-event
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
        labels: "requestId,serviceId"

  mongo-user:
    image: mongo:latest
    container_name: mongo-user
    ports:
      - "27017:27017"
    volumes:
      - user-data:/data/db
    networks:
      - event-network

  mongo-event:
    image: mongo:latest
    container_name: mongo-event
    ports:
      - "27018:27017"
    volumes:
      - event-data:/data/db
    networks:
      - event-network

networks:
  event-network:
    driver: bridge
    name: event-network

volumes:
  user-data:
  event-data:
  loki-data:
  grafana-data:
  prometheus-data:
